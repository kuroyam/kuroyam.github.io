<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: cocos2d | blog.kuroyam.info]]></title>
  <link href="http://kuroyam.github.io/blog/categories/cocos2d/atom.xml" rel="self"/>
  <link href="http://kuroyam.github.io/"/>
  <updated>2013-10-29T22:25:39+09:00</updated>
  <id>http://kuroyam.github.io/</id>
  <author>
    <name><![CDATA[kuroyam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[cocos2d-xとラムダ式でCCCallBlockっぽいことをする]]></title>
    <link href="http://kuroyam.github.io/blog/2013/10/26/cocos2d/"/>
    <updated>2013-10-26T23:50:00+09:00</updated>
    <id>http://kuroyam.github.io/blog/2013/10/26/cocos2d</id>
    <content type="html"><![CDATA[<p>cocos2d for iPhoneには CCCallBlock というすごく便利なメソッドがありました。</p>

<p>アニメーションシーケンスの中でblocksを呼べちゃうやつですね。<br/>
アニメーション終了時になにか処理したいときとか、callbackとしてblocksを渡したりしたいときに便利でした。</p>

<pre><code>- (void)deadAnimation {
    id animation = [CCAnimation animationWithSpriteFrames:_frames];
    id animate   = [CCAnimate actionWithAnimation:animation];
    id blocks    = [CCCallBlock actionWithBlock:
                    ^{ 
                        [_sprite removeFromParentAndCleanup:YES];
                        [_score addScore:1000];
                        [_sound playSE];
                    }];
    id sequence  = [CCSequence actions:animate, blocks, nil];

    [_sprite runAction:sequence];
}
</code></pre>

<p>cocos2d-x2.xではblocksを使えないのでCCCallFuncを使うしかありません。</p>

<pre><code>void Hoge::deadAnimation() {
    CCAnimation animation = CCAnimation::createWithSpriteFrames(mFrames);
    CCAnimate   animate   = CCAnimate::create(animation);
    CCCallFunc  func      = CCCallFunc::create(this, callfunc_selector(Hoge::dead));
    CCSequece   sequence  = CCSequence::create(animate, func, NULL);

    mSprite-&gt;runAction(sequence);
}

void dead() {
    mSprite-&gt;removeFromParentAndCleanup(true);
    mScore-&gt;addScore(1000);
    mSound-&gt;playSE();
}
</code></pre>

<p>cocos2d-x3.0からC++11に対応したらしいのでラムダ式とか使ってCCCallBlockっぽく書けます。</p>

<pre><code>void Hoge::deadAnimation() {
    auto animation = Animation::createWithSptireFrames(mFrames);
    auto animate   = Animate::create(animation);
    auto func      = CallFunc::create(
                                      [&amp;](){ 
                                          mSprite-&gt;removeFromParentAndCleanup(true);
                                          mScore-&gt;addScore(1000);
                                          mSound-&gt;playSE();
                                      });
    auto sequence  = Sequence::create(animate, func, nullptr);

    mSprite-&gt;runAction(sequence);
}
</code></pre>

<p>インデントがちょっとすっきりしないけど、わりといい感じ！</p>

<p>ちなみにcallbackを受け取りたいときは</p>

<pre><code>void Hoge::hogeAnimation(const std::function&lt;void ()&gt; &amp;func) {
    auto animation = Animation::createWithSptireFrames(mFrames);
    auto animate   = Animate::create(animation);
    auto callback  = CallFunc::create(func);
    auto sequence  = Sequence::create(animate, callback, nullptr);

    mSprite-&gt;runAction(sequence);
}
</code></pre>

<p>みたいにできるはず。</p>
]]></content>
  </entry>
  
</feed>
